#Lancer le docker dans l'environnement de prod 
#docker compose -f docker-compose-prod.yml --env-file .env.prod up -d --build
services:
  mongodb:
    image: mongo:7
    container_name: wishapp_mongodb
    env_file: .env.prod
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh",
              "-u", "${MONGO_INITDB_ROOT_USERNAME}",
              "-p", "${MONGO_INITDB_ROOT_PASSWORD}",
              "--authenticationDatabase", "admin",
              "--eval", "db.adminCommand('ping')"]
      interval: 10s        # en prod on espace un peu plus
      timeout: 5s
      retries: 10
    restart: always        # relance si Mongo plante

  backend:
    build:
      context: ./Back/wish-app
      dockerfile: Dockerfile
      target: app_prod 
    container_name: wishapp_backend
    env_file: .env.prod
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      mongodb:
        condition: service_healthy
    restart: always

volumes:
  mongo_data:
